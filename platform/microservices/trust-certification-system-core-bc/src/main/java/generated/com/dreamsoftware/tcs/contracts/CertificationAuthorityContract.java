package com.dreamsoftware.tcs.contracts;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.8.4.
 */
@SuppressWarnings("rawtypes")
public class CertificationAuthorityContract extends Contract {
    public static final String BINARY = "608060405234801561001057600080fd5b50600080546001600160a01b03191633179055612579806100326000396000f3fe6080604052600436106101405760003560e01c80636f9d5c6c116100b6578063dc580b3d1161006f578063dc580b3d14610390578063e5225381146103b2578063eaaf32f0146103c7578063f05fa263146103e7578063f2fde38b14610407578063fa4fb6421461042757610140565b80636f9d5c6c146102d057806378a8eb92146102f05780638a765457146103105780639363bc5514610330578063a359188a14610350578063b925a4d21461037057610140565b806345e397051161010857806345e397051461020e5780634ad2d03814610230578063526e2dc41461025d5780635b50993e1461027d5780635fd94b681461029d57806363d3d48f146102b057610140565b806312065fe014610145578063178d318b146101705780631b853182146101925780631f21c6e8146101b457806323bdba0b146101e1575b600080fd5b34801561015157600080fd5b5061015a61043c565b60405161016791906124e7565b60405180910390f35b34801561017c57600080fd5b50610185610475565b60405161016791906120eb565b34801561019e57600080fd5b506101a7610631565b60405161016791906120b1565b3480156101c057600080fd5b506101d46101cf366004611ec8565b610640565b6040516101679190612156565b3480156101ed57600080fd5b506102016101fc366004611f46565b6106eb565b604051610167919061214b565b34801561021a57600080fd5b5061022e610229366004611f46565b610784565b005b34801561023c57600080fd5b5061025061024b366004611f0b565b610b71565b60405161016791906124d4565b34801561026957600080fd5b5061022e610278366004611f46565b610d04565b34801561028957600080fd5b5061022e610298366004611f0b565b610ea9565b61022e6102ab366004611ec8565b610fe3565b3480156102bc57600080fd5b506102016102cb366004611f46565b61102f565b3480156102dc57600080fd5b5061022e6102eb366004611f46565b6110c9565b3480156102fc57600080fd5b506101a761030b366004611f0b565b6112cc565b34801561031c57600080fd5b5061022e61032b366004611f0b565b61134d565b34801561033c57600080fd5b5061020161034b366004611f0b565b611777565b34801561035c57600080fd5b5061020161036b366004611f0b565b6117fa565b34801561037c57600080fd5b5061022e61038b366004611f0b565b611831565b34801561039c57600080fd5b506103a561195d565b60405161016791906124f0565b3480156103be57600080fd5b5061022e611962565b3480156103d357600080fd5b5061022e6103e2366004611f0b565b6119c9565b3480156103f357600080fd5b5061022e610402366004611f46565b611ab6565b34801561041357600080fd5b5061022e610422366004611ec8565b611c4a565b34801561043357600080fd5b506103a5611ce2565b600080546001600160a01b031633146104705760405162461bcd60e51b815260040161046790612425565b60405180910390fd5b504790565b6000546060906001600160a01b031633146104a25760405162461bcd60e51b815260040161046790612425565b60025460609067ffffffffffffffff811180156104be57600080fd5b506040519080825280602002602001820160405280156104f857816020015b6104e5611d90565b8152602001906001900390816104dd5790505b50905060005b60025481101561062b5760046002828154811061051757fe5b9060005260206000200160405161052e9190612041565b9081526040805160209281900383018120805460026001821615610100026000190190911604601f8101859004909402820160a0908101909352608082018481529193909284929184918401828280156105c95780601f1061059e576101008083540402835291602001916105c9565b820191906000526020600020905b8154815290600101906020018083116105ac57829003601f168201915b5050509183525050600191909101546001600160a01b038116602083015260ff600160a01b8204811615156040840152600160a81b909104161515606090910152825183908390811061061857fe5b60209081029190910101526001016104fe565b50905090565b6000546001600160a01b031690565b6001600160a01b03811660009081526006602090815260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452606093928301828280156106df5780601f106106b4576101008083540402835291602001916106df565b820191906000526020600020905b8154815290600101906020018083116106c257829003601f168201915b50505050509050919050565b6000826004816040516106fe9190612025565b9081526040519081900360200190206001015460ff600160a81b909104166107385760405162461bcd60e51b815260040161046790612348565b6005846040516107489190612025565b908152604080519182900360209081019092206001600160a01b0386166000908152925290206002015460ff6101009091041691505092915050565b816004816040516107959190612025565b9081526040519081900360200190206001015460ff600160a81b909104166107cf5760405162461bcd60e51b815260040161046790612348565b826004816040516107e09190612025565b9081526040519081900360200190206001015460ff600160a01b9091041661081a5760405162461bcd60e51b815260040161046790612193565b8261082481611ce7565b156108415760405162461bcd60e51b815260040161046790612482565b33856005816040516108539190612025565b90815260408051602092819003830190206001600160a01b0385166000908152925290206002015460ff1661089a5760405162461bcd60e51b815260040161046790612482565b60015460405163450efe2160e01b81526000916001600160a01b03169063450efe21906108cb9033906004016120b1565b60206040518083038186803b1580156108e357600080fd5b505afa1580156108f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091b9190611f96565b9050600281101561093e5760405162461bcd60e51b8152600401610467906121da565b6001546040516317d5759960e31b81526001600160a01b039091169063beabacc89061097390339030906002906004016120c5565b602060405180830381600087803b15801561098d57600080fd5b505af11580156109a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c59190611eeb565b6109e15760405162461bcd60e51b8152600401610467906123ee565b6040805160a0810182526001600160a01b0389168152602081018a905260008183015260016060820181905260808201529051600590610a22908b90612025565b90815260408051602092819003830190206001600160a01b038b81166000908152918452919020835181546001600160a01b03191692169190911781558282015180519192610a7992600185019290910190611db7565b506040828101516002909201805460608501516080909501511515620100000262ff0000199515156101000261ff001995151560ff19909316929092179490941617939093169190911790915560038054600181019091557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b038a166001600160a01b031990911681179091556000908152600660209081529190208951610b2d928b0190611db7565b507f9b510db167d69ef42b1e2b270145c32f5c6c23e7a8ec7583eb0c6d3799ddb5e48888604051610b5f929190612169565b60405180910390a15050505050505050565b610b79611d90565b81600481604051610b8a9190612025565b9081526040519081900360200190206001015460ff600160a81b90910416610bc45760405162461bcd60e51b815260040161046790612348565b82600481604051610bd59190612025565b9081526040519081900360200190206001015460ff600160a01b90910416610c0f5760405162461bcd60e51b815260040161046790612193565b600484604051610c1f9190612025565b9081526040805160209281900383018120805460026001821615610100026000190190911604601f8101859004909402820160a090810190935260808201848152919390928492918491840182828015610cba5780601f10610c8f57610100808354040283529160200191610cba565b820191906000526020600020905b815481529060010190602001808311610c9d57829003601f168201915b5050509183525050600191909101546001600160a01b038116602083015260ff600160a01b8204811615156040840152600160a81b90910416151560609091015292505050919050565b81600481604051610d159190612025565b9081526040519081900360200190206001015460ff600160a81b90910416610d4f5760405162461bcd60e51b815260040161046790612348565b82600481604051610d609190612025565b9081526040519081900360200190206001015460ff600160a01b90910416610d9a5760405162461bcd60e51b815260040161046790612193565b82610da481611ce7565b610dc05760405162461bcd60e51b8152600401610467906122fa565b3385600581604051610dd29190612025565b90815260408051602092819003830190206001600160a01b0385166000908152925290206002015460ff16610e195760405162461bcd60e51b815260040161046790612482565b6001600588604051610e2b9190612025565b9081526040805191829003602090810183206001600160a01b038b16600090815291522060020180549215156101000261ff0019909316929092179091557f4ac56173df56d6fde97d50e07b81be121345b6f5548f79fc376d9fa329cd0dc090610e989089908990612169565b60405180910390a150505050505050565b6000546001600160a01b03163314610ed35760405162461bcd60e51b815260040161046790612425565b80600481604051610ee49190612025565b9081526040519081900360200190206001015460ff600160a01b9091041615610f1f5760405162461bcd60e51b8152600401610467906122b2565b81600481604051610f309190612025565b9081526040519081900360200190206001015460ff600160a81b90910416610f6a5760405162461bcd60e51b815260040161046790612348565b6001600484604051610f7c9190612025565b9081526040519081900360200181206001018054921515600160a01b0260ff60a01b19909316929092179091557ffe1f114418ec909c4c7b80a816a669668ccacc3ffc93f23e4f2725fdcdd1f74990610fd6908590612156565b60405180910390a1505050565b6000546001600160a01b0316331461100d5760405162461bcd60e51b815260040161046790612425565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000826004816040516110429190612025565b9081526040519081900360200190206001015460ff600160a81b9091041661107c5760405162461bcd60e51b815260040161046790612348565b60058460405161108c9190612025565b908152604080519182900360209081019092206001600160a01b0386166000908152925290206002015460ff620100009091041691505092915050565b816004816040516110da9190612025565b9081526040519081900360200190206001015460ff600160a81b909104166111145760405162461bcd60e51b815260040161046790612348565b826004816040516111259190612025565b9081526040519081900360200190206001015460ff600160a01b9091041661115f5760405162461bcd60e51b815260040161046790612193565b8261116981611ce7565b6111855760405162461bcd60e51b8152600401610467906122fa565b33856005816040516111979190612025565b90815260408051602092819003830190206001600160a01b0385166000908152925290206002015460ff166111de5760405162461bcd60e51b815260040161046790612482565b85876005816040516111f09190612025565b90815260408051602092819003830190206001600160a01b0385166000908152925290206002015460ff16156112385760405162461bcd60e51b815260040161046790612482565b600060058a60405161124a9190612025565b9081526040805191829003602090810183206001600160a01b038d1660009081529152206002018054921515620100000262ff000019909316929092179091557fbb912f329eaea147a2ad34277262fedbba5faddcb5880d122cd3bfc660785596906112b9908b908b90612169565b60405180910390a1505050505050505050565b6000816004816040516112df9190612025565b9081526040519081900360200190206001015460ff600160a81b909104166113195760405162461bcd60e51b815260040161046790612348565b6004836040516113299190612025565b908152604051908190036020019020600101546001600160a01b0316915050919050565b8060048160405161135e9190612025565b9081526040519081900360200190206001015460ff600160a81b90910416156113995760405162461bcd60e51b81526004016104679061239a565b336113a381611ce7565b156113c05760405162461bcd60e51b815260040161046790612482565b60015460405163450efe2160e01b81526000916001600160a01b03169063450efe21906113f19033906004016120b1565b60206040518083038186803b15801561140957600080fd5b505afa15801561141d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114419190611f96565b905060058110156114645760405162461bcd60e51b815260040161046790612248565b6001546040516317d5759960e31b81526001600160a01b039091169063beabacc89061149990339030906005906004016120c5565b602060405180830381600087803b1580156114b357600080fd5b505af11580156114c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114eb9190611eeb565b6115075760405162461bcd60e51b8152600401610467906123ee565b60028054600181018255600091909152845161154a917f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01906020870190611db7565b506040805160808101825285815233602082015260018183018190526060820152905160049061157b908790612025565b908152602001604051809103902060008201518160000190805190602001906115a5929190611db7565b50602082810151600192830180546040808701516060978801516001600160a01b03199093166001600160a01b039095169490941760ff60a01b1916600160a01b941515949094029390931760ff60a81b1916600160a81b91151591909102179055805160a0810182523381529182018890528181018390529281018290526080810191909152905160059061163c908790612025565b908152604080516020928190038301902033600090815290835220825181546001600160a01b0319166001600160a01b03909116178155828201518051919261168d92600185019290910190611db7565b506040828101516002909201805460608501516080909501511515620100000262ff0000199515156101000261ff001995151560ff19909316929092179490941617939093169190911790915560038054600181019091557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b03191633908117909155600090815260066020908152919020855161173792870190611db7565b507f6a95863823371112fb723103396353c8b0ae3671b5df8197e2b9e19bd2ecd8468433604051611769929190612169565b60405180910390a150505050565b60008160048160405161178a9190612025565b9081526040519081900360200190206001015460ff600160a81b909104166117c45760405162461bcd60e51b815260040161046790612348565b6004836040516117d49190612025565b9081526040519081900360200190206001015460ff600160a01b90910416915050919050565b600060048260405161180c9190612025565b9081526040519081900360200190206001015460ff600160a81b909104169050919050565b6000546001600160a01b0316331461185b5760405162461bcd60e51b815260040161046790612425565b8060048160405161186c9190612025565b9081526040519081900360200190206001015460ff600160a01b909104166118a65760405162461bcd60e51b815260040161046790612193565b816004816040516118b79190612025565b9081526040519081900360200190206001015460ff600160a81b909104166118f15760405162461bcd60e51b815260040161046790612348565b60006004846040516119039190612025565b9081526040519081900360200181206001018054921515600160a01b0260ff60a01b19909316929092179091557fd74ae80576e7573c88d5135838cbe64e54497b42a078868e19af37d9f58d9c4b90610fd6908590612156565b600581565b6000546001600160a01b0316331461198c5760405162461bcd60e51b815260040161046790612425565b600080546040516001600160a01b03909116914780156108fc02929091818181858888f193505050501580156119c6573d6000803e3d6000fd5b50565b6000546001600160a01b031633146119f35760405162461bcd60e51b815260040161046790612425565b80600481604051611a049190612025565b9081526040519081900360200190206001015460ff600160a81b90910416611a3e5760405162461bcd60e51b815260040161046790612348565b6000600483604051611a509190612025565b9081526040519081900360200181206001018054921515600160a81b0260ff60a81b19909316929092179091557fd052c0f18920cd71da2add127cb77c52f3eaca5401cb459ce21a6943214d691690611aaa908490612156565b60405180910390a15050565b81600481604051611ac79190612025565b9081526040519081900360200190206001015460ff600160a81b90910416611b015760405162461bcd60e51b815260040161046790612348565b82600481604051611b129190612025565b9081526040519081900360200190206001015460ff600160a01b90910416611b4c5760405162461bcd60e51b815260040161046790612193565b82611b5681611ce7565b611b725760405162461bcd60e51b8152600401610467906122fa565b3385600581604051611b849190612025565b90815260408051602092819003830190206001600160a01b0385166000908152925290206002015460ff16611bcb5760405162461bcd60e51b815260040161046790612482565b6000600588604051611bdd9190612025565b9081526040805191829003602090810183206001600160a01b038b16600090815291522060020180549215156101000261ff0019909316929092179091557f4bc05d536b2bc3cf44fa071e4c0d546e38159e4c30db782eade16c5acf75635d90610e989089908990612169565b6000546001600160a01b03163314611c745760405162461bcd60e51b815260040161046790612425565b6001600160a01b038116611c8757600080fd5b600080546040516001600160a01b03808516939216917ff77c6eb92f5003da08a86ab833733c2f7f05480f4cc11bf57bf9fecb10873ad791a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600281565b60008060009050600083604051602001611d0191906120b1565b60405160208183030381529060405280519060200120905060005b600354811015611d875760038181548110611d3357fe5b60009182526020918290200154604051611d59926001600160a01b0390921691016120b1565b60405160208183030381529060405280519060200120821415611d7f5760019250611d87565b600101611d1c565b50909392505050565b60408051608081018252606080825260006020830181905292820183905281019190915290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611df857805160ff1916838001178555611e25565b82800160010185558215611e25579182015b82811115611e25578251825591602001919060010190611e0a565b50611e31929150611e35565b5090565b5b80821115611e315760008155600101611e36565b600082601f830112611e5a578081fd5b813567ffffffffffffffff80821115611e71578283fd5b604051601f8301601f191681016020018281118282101715611e91578485fd5b604052828152925082848301602001861015611eac57600080fd5b8260208601602083013760006020848301015250505092915050565b600060208284031215611ed9578081fd5b8135611ee48161252e565b9392505050565b600060208284031215611efc578081fd5b81518015158114611ee4578182fd5b600060208284031215611f1c578081fd5b813567ffffffffffffffff811115611f32578182fd5b611f3e84828501611e4a565b949350505050565b60008060408385031215611f58578081fd5b823567ffffffffffffffff811115611f6e578182fd5b611f7a85828601611e4a565b9250506020830135611f8b8161252e565b809150509250929050565b600060208284031215611fa7578081fd5b5051919050565b60008151808452611fc68160208601602086016124fe565b601f01601f19169290920160200192915050565b6000815160808452611fef6080850182611fae565b6020848101516001600160a01b031690860152604080850151151590860152606093840151151593909401929092525090919050565b600082516120378184602087016124fe565b9190910192915050565b60008083546001808216600081146120605760018114612077576120a6565b60ff198316865260028304607f16860193506120a6565b600283048786526020808720875b8381101561209e5781548a820152908501908201612085565b505050860193505b509195945050505050565b6001600160a01b0391909116815260200190565b6001600160a01b03938416815291909216602082015260ff909116604082015260600190565b6000602080830181845280855180835260408601915060408482028701019250838701855b8281101561213e57603f1988860301845261212c858351611fda565b94509285019290850190600101612110565b5092979650505050505050565b901515815260200190565b600060208252611ee46020830184611fae565b60006040825261217c6040830185611fae565b905060018060a01b03831660208301529392505050565b60208082526027908201527f43657274696669636174696f6e20417574686f72697479206d75737420626520604082015266195b98589b195960ca1b606082015260800190565b60208082526048908201527f596f7520646f206e6f74206861766520656e6f75676820746f6b656e7320746f60408201527f2072656769737465722043657274696669636174696f6e20417574686f7269746060820152673c9026b2b6b132b960c11b608082015260a00190565b60208082526044908201527f596f7520646f206e6f74206861766520656e6f75676820746f6b656e7320746f60408201527f2072656769737465722061732043657274696669636174696f6e20417574686f6060820152637269747960e01b608082015260a00190565b60208082526028908201527f43657274696669636174696f6e20417574686f72697479206d75737420626520604082015267191a5cd8589b195960c21b606082015260800190565b6020808252602e908201527f41646472657373204d757374206265206120616c7265616479206361206d656d60408201526d18995c881c9959da5cdd195c995960921b606082015260800190565b60208082526032908201527f43657274696669636174696f6e20417574686f72697479207769746820676976604082015271656e20696420646f6e27742065786973747360701b606082015260800190565b60208082526034908201527f43657274696669636174696f6e20417574686f72697479207769746820676976604082015273656e20696420616c72656164792065786973747360601b606082015260800190565b6020808252601e908201527f546865207472616e7366657220636f756c64206e6f74206265206d6164650000604082015260600190565b6020808252603c908201527f596f7520646f6e2774206861766520656e6f75676874207065726d697373696f60408201527f6e7320746f20657865637574652074686973206f7065726174696f6e00000000606082015260800190565b60208082526032908201527f41646472657373204d757374206e6f74206265206120616c7265616479206361604082015271081b595b58995c881c9959da5cdd195c995960721b606082015260800190565b600060208252611ee46020830184611fda565b90815260200190565b60ff91909116815260200190565b60005b83811015612519578181015183820152602001612501565b83811115612528576000848401525b50505050565b6001600160a01b03811681146119c657600080fdfea2646970667358221220bde75450e3845794fae4347f5ab58fa9eab2ea770a1d40f02550feee1cb129bd64736f6c63430007010033";

    public static final String FUNC_ADD_CERTIFICATION_AUTHORITY_COST_IN_TCS_TOKENS = "ADD_CERTIFICATION_AUTHORITY_COST_IN_TCS_TOKENS";

    public static final String FUNC_ADD_CERTIFICATION_AUTHORITY_MEMBER_COST_IN_TCS_TOKENS = "ADD_CERTIFICATION_AUTHORITY_MEMBER_COST_IN_TCS_TOKENS";

    public static final String FUNC_ADDCERTIFICATIONAUTHORITY = "addCertificationAuthority";

    public static final String FUNC_ADDMEMBER = "addMember";

    public static final String FUNC_COLLECT = "collect";

    public static final String FUNC_DISABLECERTIFICATIONAUTHORITY = "disableCertificationAuthority";

    public static final String FUNC_DISABLEMEMBER = "disableMember";

    public static final String FUNC_ENABLECERTIFICATIONAUTHORITY = "enableCertificationAuthority";

    public static final String FUNC_ENABLEMEMBER = "enableMember";

    public static final String FUNC_GETALLCERTIFICATIONAUTHORITIES = "getAllCertificationAuthorities";

    public static final String FUNC_GETBALANCE = "getBalance";

    public static final String FUNC_GETCERTIFICATEAUTHORITYADMINMEMBER = "getCertificateAuthorityAdminMember";

    public static final String FUNC_GETCERTIFICATEAUTHORITYDETAIL = "getCertificateAuthorityDetail";

    public static final String FUNC_GETCERTIFICATIONAUTHORITYBYMEMBER = "getCertificationAuthorityByMember";

    public static final String FUNC_ISCERTIFICATIONAUTHORITYENABLED = "isCertificationAuthorityEnabled";

    public static final String FUNC_ISCERTIFICATIONAUTHORITYEXISTS = "isCertificationAuthorityExists";

    public static final String FUNC_ISCERTIFICATIONAUTHORITYMEMBERENABLED = "isCertificationAuthorityMemberEnabled";

    public static final String FUNC_ISCERTIFICATIONAUTHORITYMEMBEREXISTS = "isCertificationAuthorityMemberExists";

    public static final String FUNC_OWNINGAUTHORITY = "owningAuthority";

    public static final String FUNC_REMOVECERTIFICATIONAUTHORITY = "removeCertificationAuthority";

    public static final String FUNC_REMOVEMEMBER = "removeMember";

    public static final String FUNC_SETTOKENMANAGEMENTADDR = "setTokenManagementAddr";

    public static final String FUNC_TRANSFEROWNERSHIP = "transferOwnership";

    public static final Event ONCERTIFICATIONAUTHORITYDISABLED_EVENT = new Event("OnCertificationAuthorityDisabled", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
    ;

    public static final Event ONCERTIFICATIONAUTHORITYENABLED_EVENT = new Event("OnCertificationAuthorityEnabled", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
    ;

    public static final Event ONCERTIFICATIONAUTHORITYMEMBERDISABLED_EVENT = new Event("OnCertificationAuthorityMemberDisabled", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}));
    ;

    public static final Event ONCERTIFICATIONAUTHORITYMEMBERENABLED_EVENT = new Event("OnCertificationAuthorityMemberEnabled", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}));
    ;

    public static final Event ONCERTIFICATIONAUTHORITYMEMBERREMOVED_EVENT = new Event("OnCertificationAuthorityMemberRemoved", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}));
    ;

    public static final Event ONCERTIFICATIONAUTHORITYREMOVED_EVENT = new Event("OnCertificationAuthorityRemoved", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
    ;

    public static final Event ONNEWCERTIFICATIONAUTHORITYCREATED_EVENT = new Event("OnNewCertificationAuthorityCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}));
    ;

    public static final Event ONNEWCERTIFICATIONAUTHORITYMEMBERADDED_EVENT = new Event("OnNewCertificationAuthorityMemberAdded", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}));
    ;

    public static final Event ONOWNERSHIPTRANSFERRED_EVENT = new Event("OnOwnershipTransferred", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    @Deprecated
    protected CertificationAuthorityContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected CertificationAuthorityContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected CertificationAuthorityContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected CertificationAuthorityContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<OnCertificationAuthorityDisabledEventResponse> getOnCertificationAuthorityDisabledEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ONCERTIFICATIONAUTHORITYDISABLED_EVENT, transactionReceipt);
        ArrayList<OnCertificationAuthorityDisabledEventResponse> responses = new ArrayList<OnCertificationAuthorityDisabledEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OnCertificationAuthorityDisabledEventResponse typedResponse = new OnCertificationAuthorityDisabledEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OnCertificationAuthorityDisabledEventResponse> onCertificationAuthorityDisabledEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, OnCertificationAuthorityDisabledEventResponse>() {
            @Override
            public OnCertificationAuthorityDisabledEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ONCERTIFICATIONAUTHORITYDISABLED_EVENT, log);
                OnCertificationAuthorityDisabledEventResponse typedResponse = new OnCertificationAuthorityDisabledEventResponse();
                typedResponse.log = log;
                typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OnCertificationAuthorityDisabledEventResponse> onCertificationAuthorityDisabledEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ONCERTIFICATIONAUTHORITYDISABLED_EVENT));
        return onCertificationAuthorityDisabledEventFlowable(filter);
    }

    public List<OnCertificationAuthorityEnabledEventResponse> getOnCertificationAuthorityEnabledEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ONCERTIFICATIONAUTHORITYENABLED_EVENT, transactionReceipt);
        ArrayList<OnCertificationAuthorityEnabledEventResponse> responses = new ArrayList<OnCertificationAuthorityEnabledEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OnCertificationAuthorityEnabledEventResponse typedResponse = new OnCertificationAuthorityEnabledEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OnCertificationAuthorityEnabledEventResponse> onCertificationAuthorityEnabledEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, OnCertificationAuthorityEnabledEventResponse>() {
            @Override
            public OnCertificationAuthorityEnabledEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ONCERTIFICATIONAUTHORITYENABLED_EVENT, log);
                OnCertificationAuthorityEnabledEventResponse typedResponse = new OnCertificationAuthorityEnabledEventResponse();
                typedResponse.log = log;
                typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OnCertificationAuthorityEnabledEventResponse> onCertificationAuthorityEnabledEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ONCERTIFICATIONAUTHORITYENABLED_EVENT));
        return onCertificationAuthorityEnabledEventFlowable(filter);
    }

    public List<OnCertificationAuthorityMemberDisabledEventResponse> getOnCertificationAuthorityMemberDisabledEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ONCERTIFICATIONAUTHORITYMEMBERDISABLED_EVENT, transactionReceipt);
        ArrayList<OnCertificationAuthorityMemberDisabledEventResponse> responses = new ArrayList<OnCertificationAuthorityMemberDisabledEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OnCertificationAuthorityMemberDisabledEventResponse typedResponse = new OnCertificationAuthorityMemberDisabledEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._address = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OnCertificationAuthorityMemberDisabledEventResponse> onCertificationAuthorityMemberDisabledEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, OnCertificationAuthorityMemberDisabledEventResponse>() {
            @Override
            public OnCertificationAuthorityMemberDisabledEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ONCERTIFICATIONAUTHORITYMEMBERDISABLED_EVENT, log);
                OnCertificationAuthorityMemberDisabledEventResponse typedResponse = new OnCertificationAuthorityMemberDisabledEventResponse();
                typedResponse.log = log;
                typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._address = (String) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OnCertificationAuthorityMemberDisabledEventResponse> onCertificationAuthorityMemberDisabledEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ONCERTIFICATIONAUTHORITYMEMBERDISABLED_EVENT));
        return onCertificationAuthorityMemberDisabledEventFlowable(filter);
    }

    public List<OnCertificationAuthorityMemberEnabledEventResponse> getOnCertificationAuthorityMemberEnabledEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ONCERTIFICATIONAUTHORITYMEMBERENABLED_EVENT, transactionReceipt);
        ArrayList<OnCertificationAuthorityMemberEnabledEventResponse> responses = new ArrayList<OnCertificationAuthorityMemberEnabledEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OnCertificationAuthorityMemberEnabledEventResponse typedResponse = new OnCertificationAuthorityMemberEnabledEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._address = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OnCertificationAuthorityMemberEnabledEventResponse> onCertificationAuthorityMemberEnabledEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, OnCertificationAuthorityMemberEnabledEventResponse>() {
            @Override
            public OnCertificationAuthorityMemberEnabledEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ONCERTIFICATIONAUTHORITYMEMBERENABLED_EVENT, log);
                OnCertificationAuthorityMemberEnabledEventResponse typedResponse = new OnCertificationAuthorityMemberEnabledEventResponse();
                typedResponse.log = log;
                typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._address = (String) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OnCertificationAuthorityMemberEnabledEventResponse> onCertificationAuthorityMemberEnabledEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ONCERTIFICATIONAUTHORITYMEMBERENABLED_EVENT));
        return onCertificationAuthorityMemberEnabledEventFlowable(filter);
    }

    public List<OnCertificationAuthorityMemberRemovedEventResponse> getOnCertificationAuthorityMemberRemovedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ONCERTIFICATIONAUTHORITYMEMBERREMOVED_EVENT, transactionReceipt);
        ArrayList<OnCertificationAuthorityMemberRemovedEventResponse> responses = new ArrayList<OnCertificationAuthorityMemberRemovedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OnCertificationAuthorityMemberRemovedEventResponse typedResponse = new OnCertificationAuthorityMemberRemovedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._address = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OnCertificationAuthorityMemberRemovedEventResponse> onCertificationAuthorityMemberRemovedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, OnCertificationAuthorityMemberRemovedEventResponse>() {
            @Override
            public OnCertificationAuthorityMemberRemovedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ONCERTIFICATIONAUTHORITYMEMBERREMOVED_EVENT, log);
                OnCertificationAuthorityMemberRemovedEventResponse typedResponse = new OnCertificationAuthorityMemberRemovedEventResponse();
                typedResponse.log = log;
                typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._address = (String) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OnCertificationAuthorityMemberRemovedEventResponse> onCertificationAuthorityMemberRemovedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ONCERTIFICATIONAUTHORITYMEMBERREMOVED_EVENT));
        return onCertificationAuthorityMemberRemovedEventFlowable(filter);
    }

    public List<OnCertificationAuthorityRemovedEventResponse> getOnCertificationAuthorityRemovedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ONCERTIFICATIONAUTHORITYREMOVED_EVENT, transactionReceipt);
        ArrayList<OnCertificationAuthorityRemovedEventResponse> responses = new ArrayList<OnCertificationAuthorityRemovedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OnCertificationAuthorityRemovedEventResponse typedResponse = new OnCertificationAuthorityRemovedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OnCertificationAuthorityRemovedEventResponse> onCertificationAuthorityRemovedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, OnCertificationAuthorityRemovedEventResponse>() {
            @Override
            public OnCertificationAuthorityRemovedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ONCERTIFICATIONAUTHORITYREMOVED_EVENT, log);
                OnCertificationAuthorityRemovedEventResponse typedResponse = new OnCertificationAuthorityRemovedEventResponse();
                typedResponse.log = log;
                typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OnCertificationAuthorityRemovedEventResponse> onCertificationAuthorityRemovedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ONCERTIFICATIONAUTHORITYREMOVED_EVENT));
        return onCertificationAuthorityRemovedEventFlowable(filter);
    }

    public List<OnNewCertificationAuthorityCreatedEventResponse> getOnNewCertificationAuthorityCreatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ONNEWCERTIFICATIONAUTHORITYCREATED_EVENT, transactionReceipt);
        ArrayList<OnNewCertificationAuthorityCreatedEventResponse> responses = new ArrayList<OnNewCertificationAuthorityCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OnNewCertificationAuthorityCreatedEventResponse typedResponse = new OnNewCertificationAuthorityCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._address = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OnNewCertificationAuthorityCreatedEventResponse> onNewCertificationAuthorityCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, OnNewCertificationAuthorityCreatedEventResponse>() {
            @Override
            public OnNewCertificationAuthorityCreatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ONNEWCERTIFICATIONAUTHORITYCREATED_EVENT, log);
                OnNewCertificationAuthorityCreatedEventResponse typedResponse = new OnNewCertificationAuthorityCreatedEventResponse();
                typedResponse.log = log;
                typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._address = (String) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OnNewCertificationAuthorityCreatedEventResponse> onNewCertificationAuthorityCreatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ONNEWCERTIFICATIONAUTHORITYCREATED_EVENT));
        return onNewCertificationAuthorityCreatedEventFlowable(filter);
    }

    public List<OnNewCertificationAuthorityMemberAddedEventResponse> getOnNewCertificationAuthorityMemberAddedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ONNEWCERTIFICATIONAUTHORITYMEMBERADDED_EVENT, transactionReceipt);
        ArrayList<OnNewCertificationAuthorityMemberAddedEventResponse> responses = new ArrayList<OnNewCertificationAuthorityMemberAddedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OnNewCertificationAuthorityMemberAddedEventResponse typedResponse = new OnNewCertificationAuthorityMemberAddedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._address = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OnNewCertificationAuthorityMemberAddedEventResponse> onNewCertificationAuthorityMemberAddedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, OnNewCertificationAuthorityMemberAddedEventResponse>() {
            @Override
            public OnNewCertificationAuthorityMemberAddedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ONNEWCERTIFICATIONAUTHORITYMEMBERADDED_EVENT, log);
                OnNewCertificationAuthorityMemberAddedEventResponse typedResponse = new OnNewCertificationAuthorityMemberAddedEventResponse();
                typedResponse.log = log;
                typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._address = (String) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OnNewCertificationAuthorityMemberAddedEventResponse> onNewCertificationAuthorityMemberAddedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ONNEWCERTIFICATIONAUTHORITYMEMBERADDED_EVENT));
        return onNewCertificationAuthorityMemberAddedEventFlowable(filter);
    }

    public List<OnOwnershipTransferredEventResponse> getOnOwnershipTransferredEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ONOWNERSHIPTRANSFERRED_EVENT, transactionReceipt);
        ArrayList<OnOwnershipTransferredEventResponse> responses = new ArrayList<OnOwnershipTransferredEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OnOwnershipTransferredEventResponse typedResponse = new OnOwnershipTransferredEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.previousOwner = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OnOwnershipTransferredEventResponse> onOwnershipTransferredEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, OnOwnershipTransferredEventResponse>() {
            @Override
            public OnOwnershipTransferredEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ONOWNERSHIPTRANSFERRED_EVENT, log);
                OnOwnershipTransferredEventResponse typedResponse = new OnOwnershipTransferredEventResponse();
                typedResponse.log = log;
                typedResponse.previousOwner = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OnOwnershipTransferredEventResponse> onOwnershipTransferredEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ONOWNERSHIPTRANSFERRED_EVENT));
        return onOwnershipTransferredEventFlowable(filter);
    }

    public RemoteFunctionCall<BigInteger> ADD_CERTIFICATION_AUTHORITY_COST_IN_TCS_TOKENS() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ADD_CERTIFICATION_AUTHORITY_COST_IN_TCS_TOKENS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> ADD_CERTIFICATION_AUTHORITY_MEMBER_COST_IN_TCS_TOKENS() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ADD_CERTIFICATION_AUTHORITY_MEMBER_COST_IN_TCS_TOKENS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> addCertificationAuthority(String _id) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDCERTIFICATIONAUTHORITY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addMember(String _id, String _member) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDMEMBER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id), 
                new org.web3j.abi.datatypes.Address(160, _member)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> collect() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_COLLECT, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> disableCertificationAuthority(String _id) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DISABLECERTIFICATIONAUTHORITY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> disableMember(String _id, String _member) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DISABLEMEMBER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id), 
                new org.web3j.abi.datatypes.Address(160, _member)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> enableCertificationAuthority(String _id) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ENABLECERTIFICATIONAUTHORITY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> enableMember(String _id, String _member) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ENABLEMEMBER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id), 
                new org.web3j.abi.datatypes.Address(160, _member)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<List> getAllCertificationAuthorities() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETALLCERTIFICATIONAUTHORITIES, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<CertificationAuthorityRecord>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<BigInteger> getBalance() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETBALANCE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<String> getCertificateAuthorityAdminMember(String _id) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETCERTIFICATEAUTHORITYADMINMEMBER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<CertificationAuthorityRecord> getCertificateAuthorityDetail(String _id) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETCERTIFICATEAUTHORITYDETAIL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<CertificationAuthorityRecord>() {}));
        return executeRemoteCallSingleValueReturn(function, CertificationAuthorityRecord.class);
    }

    public RemoteFunctionCall<String> getCertificationAuthorityByMember(String _member) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETCERTIFICATIONAUTHORITYBYMEMBER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _member)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Boolean> isCertificationAuthorityEnabled(String _id) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISCERTIFICATIONAUTHORITYENABLED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> isCertificationAuthorityExists(String _id) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISCERTIFICATIONAUTHORITYEXISTS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> isCertificationAuthorityMemberEnabled(String _id, String _member) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISCERTIFICATIONAUTHORITYMEMBERENABLED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id), 
                new org.web3j.abi.datatypes.Address(160, _member)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> isCertificationAuthorityMemberExists(String _id, String _member) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISCERTIFICATIONAUTHORITYMEMBEREXISTS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id), 
                new org.web3j.abi.datatypes.Address(160, _member)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> owningAuthority() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_OWNINGAUTHORITY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> removeCertificationAuthority(String _id) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REMOVECERTIFICATIONAUTHORITY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> removeMember(String _id, String _member) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REMOVEMEMBER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id), 
                new org.web3j.abi.datatypes.Address(160, _member)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setTokenManagementAddr(String _tokenManagementAddr) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETTOKENMANAGEMENTADDR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _tokenManagementAddr)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> transferOwnership(String newOwner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFEROWNERSHIP, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, newOwner)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static CertificationAuthorityContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new CertificationAuthorityContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static CertificationAuthorityContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new CertificationAuthorityContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static CertificationAuthorityContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new CertificationAuthorityContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static CertificationAuthorityContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new CertificationAuthorityContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<CertificationAuthorityContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(CertificationAuthorityContract.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<CertificationAuthorityContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(CertificationAuthorityContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<CertificationAuthorityContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(CertificationAuthorityContract.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<CertificationAuthorityContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(CertificationAuthorityContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class CertificationAuthorityRecord extends DynamicStruct {
        public String id;

        public String admin;

        public Boolean isEnabled;

        public Boolean isExist;

        public CertificationAuthorityRecord(String id, String admin, Boolean isEnabled, Boolean isExist) {
            super(new org.web3j.abi.datatypes.Utf8String(id),new org.web3j.abi.datatypes.Address(admin),new org.web3j.abi.datatypes.Bool(isEnabled),new org.web3j.abi.datatypes.Bool(isExist));
            this.id = id;
            this.admin = admin;
            this.isEnabled = isEnabled;
            this.isExist = isExist;
        }

        public CertificationAuthorityRecord(Utf8String id, Address admin, Bool isEnabled, Bool isExist) {
            super(id,admin,isEnabled,isExist);
            this.id = id.getValue();
            this.admin = admin.getValue();
            this.isEnabled = isEnabled.getValue();
            this.isExist = isExist.getValue();
        }
    }

    public static class OnCertificationAuthorityDisabledEventResponse extends BaseEventResponse {
        public String _id;
    }

    public static class OnCertificationAuthorityEnabledEventResponse extends BaseEventResponse {
        public String _id;
    }

    public static class OnCertificationAuthorityMemberDisabledEventResponse extends BaseEventResponse {
        public String _id;

        public String _address;
    }

    public static class OnCertificationAuthorityMemberEnabledEventResponse extends BaseEventResponse {
        public String _id;

        public String _address;
    }

    public static class OnCertificationAuthorityMemberRemovedEventResponse extends BaseEventResponse {
        public String _id;

        public String _address;
    }

    public static class OnCertificationAuthorityRemovedEventResponse extends BaseEventResponse {
        public String _id;
    }

    public static class OnNewCertificationAuthorityCreatedEventResponse extends BaseEventResponse {
        public String _id;

        public String _address;
    }

    public static class OnNewCertificationAuthorityMemberAddedEventResponse extends BaseEventResponse {
        public String _id;

        public String _address;
    }

    public static class OnOwnershipTransferredEventResponse extends BaseEventResponse {
        public String previousOwner;

        public String newOwner;
    }
}
