package com.dreamsoftware.tcs.contracts;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.8.4.
 */
@SuppressWarnings("rawtypes")
public class TrustCertificationContract extends Contract {
    public static final String BINARY = "$b31a2adeca312ca716e7601056a09937fc$__639201de558d8d604051602001611b9a929190612357565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401611bcc91906124be565b60006040518083038186803b158015611be457600080fd5b505af4158015611bf8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c20919081019061223d565b9050604051806101800160405280336001600160a01b031681526020018d6001600160a01b031681526020018c8152602001600260009054906101000a90046001600160a01b03166001600160a01b031663cbb9cd5d8e6040518263ffffffff1660e01b8152600401611c9391906124c7565b60206040518083038186803b158015611cab57600080fd5b505afa158015611cbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ce39190612300565b81526020018b81526020018481526020018a815260200189815260200142815260200160011515815260200160011515815260200160011515815250600382604051611d2f919061238f565b90815260408051918290036020908101909220835181546001600160a01b039182166001600160a01b0319918216178355858501516001840180549190931691161790559083015180519192611d8d92600285019290910190612028565b50606082015160038201556080820151600482015560a0820151600582015560c08201518051611dc7916006840191602090910190612028565b5060e08201518051611de3916007840191602090910190612028565b50610100828101516008830155610120830151600990920180546101408501516101609095015160ff199091169315159390931761ff0019169315159091029290921762ff00001916620100009115159190910217905533600090815260046020908152604082208054600181018255908352918190208351611e6d939190910191840190612028565b506001600160a01b038c16600090815260056020908152604082208054600181018255908352918190208351611eaa939190910191840190612028565b507f830b0c6db1f97dd915eafee9616d6f8e48463044edc4e260a26706166685dac881600383604051611edd919061238f565b90815260405190819003602001812060090154611f00929160ff90911690612504565b60405180910390a19b9a5050505050505050505050565b6000546001600160a01b03163314611f415760405162461bcd60e51b815260040161034a9061274f565b6001600160a01b038116611f5457600080fd5b600080546040516001600160a01b03808516939216917ff77c6eb92f5003da08a86ab833733c2f7f05480f4cc11bf57bf9fecb10873ad791a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60405180610180016040528060006001600160a01b0316815260200160006001600160a01b03168152602001606081526020016000815260200160008152602001600081526020016060815260200160608152602001600081526020016000151581526020016000151581526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061206957805160ff1916838001178555612096565b82800160010185558215612096579182015b8281111561209657825182559160200191906001019061207b565b506120a29291506120a6565b5090565b5b808211156120a257600081556001016120a7565b600082601f8301126120cb578081fd5b81356120de6120d982612a60565b612a39565b91508082528360208285010111156120f557600080fd5b8060208401602084013760009082016020015292915050565b60006020828403121561211f578081fd5b813561212a81612ab4565b9392505050565b600060208284031215612142578081fd5b815161212a81612ab4565b600080600080600060a08688031215612164578081fd5b853561216f81612ab4565b9450602086013567ffffffffffffffff8082111561218b578283fd5b61219789838a016120bb565b95506040880135945060608801359150808211156121b3578283fd5b6121bf89838a016120bb565b935060808801359150808211156121d4578283fd5b506121e1888289016120bb565b9150509295509295909350565b6000602082840312156121ff578081fd5b815161212a81612ac9565b60006020828403121561221b578081fd5b813567ffffffffffffffff811115612231578182fd5b6105e8848285016120bb565b60006020828403121561224e578081fd5b815167ffffffffffffffff811115612264578182fd5b8201601f81018413612274578182fd5b80516122826120d982612a60565b818152856020838501011115612296578384fd5b6122a7826020830160208601612a84565b95945050505050565b600080604083850312156122c2578182fd5b823567ffffffffffffffff8111156122d8578283fd5b6122e4858286016120bb565b92505060208301356122f581612ac9565b809150509250929050565b600060208284031215612311578081fd5b5051919050565b6001600160a01b03169052565b15159052565b60008151808452612343816020860160208601612a84565b601f01601f19169290920160200192915050565b60006bffffffffffffffffffffffff198460601b1682528251612381816014850160208701612a84565b919091016014019392505050565b600082516123a1818460208701612a84565b9190910192915050565b60008083546001808216600081146123ca57600181146123e157612410565b60ff198316865260028304607f1686019350612410565b600283048786526020808720875b838110156124085781548a8201529085019082016123ef565b505050860193505b509195945050505050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6000602080830181845280855180835260408601915060408482028701019250838701855b828110156124a657603f1988860301845261249485835161232b565b94509285019290850190600101612478565b5092979650505050505050565b901515815260200190565b90815260200190565b60006020825261212a602083018461232b565b6000604082526124ed604083018561232b565b905060018060a01b03831660208301529392505050565b600060408252612517604083018561232b565b905082151560208301529392505050565b60208082526034908201527f43657274696669636174696f6e20436f75727365207769746820676976656e206040820152731a590818d85b881b9bdd081899481a5cdcdd595960621b606082015260800190565b602080825260409082018190527f43657274696669636174696f6e20436f7572736520666f7220676976656e2063908201527f657274696669636174652069642063616e206e6f742062652072656e65776564606082015260800190565b6020808252602f908201527f43657274696669636174696f6e20436f75727365207769746820676976656e2060408201526e696420646f6e27742065786973747360881b606082015260800190565b6020808252603a908201527f43657274696669636174696f6e20436f7572736520666f7220676976656e206360408201527f6572746966696361746520696420646f6e277420657869737473000000000000606082015260800190565b6020808252602a908201527f43657274696669636174696f6e207769746820676976656e206964206973206e6040820152696f742076697369626c6560b01b606082015260800190565b60208082526028908201527f43657274696669636174696f6e207769746820676976656e20696420646f6e27604082015267742065786973747360c01b606082015260800190565b6020808252601e908201527f546865207472616e7366657220636f756c64206e6f74206265206d6164650000604082015260600190565b6020808252603c908201527f596f7520646f6e2774206861766520656e6f75676874207065726d697373696f60408201527f6e7320746f20657865637574652074686973206f7065726174696f6e00000000606082015260800190565b60208082526025908201527f4d75737420626520746865206f776e6572206f66207468697320636572746966604082015264696361746560d81b606082015260800190565b6020808252602b908201527f43657274696669636174696f6e207769746820676976656e206964206861732060408201526a1b9bdd08195e1c1a5c995960aa1b606082015260800190565b60208082526036908201527f596f7520646f206e6f74206861766520656e6f75676820746f6b656e7320746f6040820152752072656e65772074686520636572746966696361746560501b606082015260800190565b60208082526036908201527f596f7520646f206e6f74206861766520656e6f75676820746f6b656e7320746f6040820152752069737375652074686520636572746966696361746560501b606082015260800190565b60208082526038908201527f43657274696669636174696f6e20417574686f72697479206d7573742062652060408201527f746865206f776e6572206f66207468697320636f757273650000000000000000606082015260800190565b600060208252612959602083018451612318565b602083015161296b6040840182612318565b5060408301516101808060608501526129886101a085018361232b565b915060608501516080850152608085015160a085015260a085015160c085015260c0850151601f19808685030160e08701526129c4848361232b565b935060e087015191506101008187860301818801526129e3858461232b565b908801516101208881019190915288015190945091506101409050612a0a81870183612325565b8601519050610160612a1e86820183612325565b8601519050612a2f85830182612325565b5090949350505050565b60405181810167ffffffffffffffff81118282101715612a5857600080fd5b604052919050565b600067ffffffffffffffff821115612a76578081fd5b50601f01601f191660200190565b60005b83811015612a9f578181015183820152602001612a87565b83811115612aae576000848401525b50505050565b6001600160a01b038116811461173c57600080fd5b801515811461173c57600080fdfea26469706673582212202f5077a8c55e76ccc455325b86ad200f7d47bdc89929db8a84a7ac858c3ce52f64736f6c63430007010033";

    public static final String FUNC_COLLECT = "collect";

    public static final String FUNC_DISABLECERTIFICATE = "disableCertificate";

    public static final String FUNC_ENABLECERTIFICATE = "enableCertificate";

    public static final String FUNC_GETBALANCE = "getBalance";

    public static final String FUNC_GETCERTIFICATEDETAIL = "getCertificateDetail";

    public static final String FUNC_GETMYCERTIFICATESASISSUER = "getMyCertificatesAsIssuer";

    public static final String FUNC_GETMYCERTIFICATESASRECIPIENT = "getMyCertificatesAsRecipient";

    public static final String FUNC_ISCERTIFICATEVALID = "isCertificateValid";

    public static final String FUNC_ISSUECERTIFICATE = "issueCertificate";

    public static final String FUNC_OWNINGAUTHORITY = "owningAuthority";

    public static final String FUNC_RENEWCERTIFICATE = "renewCertificate";

    public static final String FUNC_SETCERTIFICATIONCOURSEADDR = "setCertificationCourseAddr";

    public static final String FUNC_SETTOKENMANAGEMENTADDR = "setTokenManagementAddr";

    public static final String FUNC_TRANSFEROWNERSHIP = "transferOwnership";

    public static final String FUNC_UPDATECERTIFICATEVISIBILITY = "updateCertificateVisibility";

    public static final String FUNC_VALIDATECERTIFICATEINTEGRITY = "validateCertificateIntegrity";

    public static final Event ONCERTIFICATEDELETED_EVENT = new Event("OnCertificateDeleted", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Bool>() {}));
    ;

    public static final Event ONCERTIFICATEDISABLED_EVENT = new Event("OnCertificateDisabled", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Bool>() {}));
    ;

    public static final Event ONCERTIFICATEENABLED_EVENT = new Event("OnCertificateEnabled", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Bool>() {}));
    ;

    public static final Event ONCERTIFICATERENEWED_EVENT = new Event("OnCertificateRenewed", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Bool>() {}));
    ;

    public static final Event ONCERTIFICATEVISIBILITYUPDATED_EVENT = new Event("OnCertificateVisibilityUpdated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Bool>() {}));
    ;

    public static final Event ONNEWCERTIFICATEGENERATED_EVENT = new Event("OnNewCertificateGenerated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Bool>() {}));
    ;

    public static final Event ONOWNERSHIPTRANSFERRED_EVENT = new Event("OnOwnershipTransferred", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    @Deprecated
    protected TrustCertificationContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected TrustCertificationContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected TrustCertificationContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected TrustCertificationContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<OnCertificateDeletedEventResponse> getOnCertificateDeletedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ONCERTIFICATEDELETED_EVENT, transactionReceipt);
        ArrayList<OnCertificateDeletedEventResponse> responses = new ArrayList<OnCertificateDeletedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OnCertificateDeletedEventResponse typedResponse = new OnCertificateDeletedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._isVisible = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OnCertificateDeletedEventResponse> onCertificateDeletedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, OnCertificateDeletedEventResponse>() {
            @Override
            public OnCertificateDeletedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ONCERTIFICATEDELETED_EVENT, log);
                OnCertificateDeletedEventResponse typedResponse = new OnCertificateDeletedEventResponse();
                typedResponse.log = log;
                typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._isVisible = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OnCertificateDeletedEventResponse> onCertificateDeletedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ONCERTIFICATEDELETED_EVENT));
        return onCertificateDeletedEventFlowable(filter);
    }

    public List<OnCertificateDisabledEventResponse> getOnCertificateDisabledEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ONCERTIFICATEDISABLED_EVENT, transactionReceipt);
        ArrayList<OnCertificateDisabledEventResponse> responses = new ArrayList<OnCertificateDisabledEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OnCertificateDisabledEventResponse typedResponse = new OnCertificateDisabledEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._isVisible = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OnCertificateDisabledEventResponse> onCertificateDisabledEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, OnCertificateDisabledEventResponse>() {
            @Override
            public OnCertificateDisabledEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ONCERTIFICATEDISABLED_EVENT, log);
                OnCertificateDisabledEventResponse typedResponse = new OnCertificateDisabledEventResponse();
                typedResponse.log = log;
                typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._isVisible = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OnCertificateDisabledEventResponse> onCertificateDisabledEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ONCERTIFICATEDISABLED_EVENT));
        return onCertificateDisabledEventFlowable(filter);
    }

    public List<OnCertificateEnabledEventResponse> getOnCertificateEnabledEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ONCERTIFICATEENABLED_EVENT, transactionReceipt);
        ArrayList<OnCertificateEnabledEventResponse> responses = new ArrayList<OnCertificateEnabledEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OnCertificateEnabledEventResponse typedResponse = new OnCertificateEnabledEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._isVisible = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OnCertificateEnabledEventResponse> onCertificateEnabledEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, OnCertificateEnabledEventResponse>() {
            @Override
            public OnCertificateEnabledEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ONCERTIFICATEENABLED_EVENT, log);
                OnCertificateEnabledEventResponse typedResponse = new OnCertificateEnabledEventResponse();
                typedResponse.log = log;
                typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._isVisible = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OnCertificateEnabledEventResponse> onCertificateEnabledEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ONCERTIFICATEENABLED_EVENT));
        return onCertificateEnabledEventFlowable(filter);
    }

    public List<OnCertificateRenewedEventResponse> getOnCertificateRenewedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ONCERTIFICATERENEWED_EVENT, transactionReceipt);
        ArrayList<OnCertificateRenewedEventResponse> responses = new ArrayList<OnCertificateRenewedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OnCertificateRenewedEventResponse typedResponse = new OnCertificateRenewedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._isVisible = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OnCertificateRenewedEventResponse> onCertificateRenewedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, OnCertificateRenewedEventResponse>() {
            @Override
            public OnCertificateRenewedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ONCERTIFICATERENEWED_EVENT, log);
                OnCertificateRenewedEventResponse typedResponse = new OnCertificateRenewedEventResponse();
                typedResponse.log = log;
                typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._isVisible = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OnCertificateRenewedEventResponse> onCertificateRenewedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ONCERTIFICATERENEWED_EVENT));
        return onCertificateRenewedEventFlowable(filter);
    }

    public List<OnCertificateVisibilityUpdatedEventResponse> getOnCertificateVisibilityUpdatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ONCERTIFICATEVISIBILITYUPDATED_EVENT, transactionReceipt);
        ArrayList<OnCertificateVisibilityUpdatedEventResponse> responses = new ArrayList<OnCertificateVisibilityUpdatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OnCertificateVisibilityUpdatedEventResponse typedResponse = new OnCertificateVisibilityUpdatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._isVisible = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OnCertificateVisibilityUpdatedEventResponse> onCertificateVisibilityUpdatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, OnCertificateVisibilityUpdatedEventResponse>() {
            @Override
            public OnCertificateVisibilityUpdatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ONCERTIFICATEVISIBILITYUPDATED_EVENT, log);
                OnCertificateVisibilityUpdatedEventResponse typedResponse = new OnCertificateVisibilityUpdatedEventResponse();
                typedResponse.log = log;
                typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._isVisible = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OnCertificateVisibilityUpdatedEventResponse> onCertificateVisibilityUpdatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ONCERTIFICATEVISIBILITYUPDATED_EVENT));
        return onCertificateVisibilityUpdatedEventFlowable(filter);
    }

    public List<OnNewCertificateGeneratedEventResponse> getOnNewCertificateGeneratedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ONNEWCERTIFICATEGENERATED_EVENT, transactionReceipt);
        ArrayList<OnNewCertificateGeneratedEventResponse> responses = new ArrayList<OnNewCertificateGeneratedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OnNewCertificateGeneratedEventResponse typedResponse = new OnNewCertificateGeneratedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._isVisible = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OnNewCertificateGeneratedEventResponse> onNewCertificateGeneratedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, OnNewCertificateGeneratedEventResponse>() {
            @Override
            public OnNewCertificateGeneratedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ONNEWCERTIFICATEGENERATED_EVENT, log);
                OnNewCertificateGeneratedEventResponse typedResponse = new OnNewCertificateGeneratedEventResponse();
                typedResponse.log = log;
                typedResponse._id = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._isVisible = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OnNewCertificateGeneratedEventResponse> onNewCertificateGeneratedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ONNEWCERTIFICATEGENERATED_EVENT));
        return onNewCertificateGeneratedEventFlowable(filter);
    }

    public List<OnOwnershipTransferredEventResponse> getOnOwnershipTransferredEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ONOWNERSHIPTRANSFERRED_EVENT, transactionReceipt);
        ArrayList<OnOwnershipTransferredEventResponse> responses = new ArrayList<OnOwnershipTransferredEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OnOwnershipTransferredEventResponse typedResponse = new OnOwnershipTransferredEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.previousOwner = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OnOwnershipTransferredEventResponse> onOwnershipTransferredEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, OnOwnershipTransferredEventResponse>() {
            @Override
            public OnOwnershipTransferredEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ONOWNERSHIPTRANSFERRED_EVENT, log);
                OnOwnershipTransferredEventResponse typedResponse = new OnOwnershipTransferredEventResponse();
                typedResponse.log = log;
                typedResponse.previousOwner = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OnOwnershipTransferredEventResponse> onOwnershipTransferredEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ONOWNERSHIPTRANSFERRED_EVENT));
        return onOwnershipTransferredEventFlowable(filter);
    }

    public RemoteFunctionCall<TransactionReceipt> collect() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_COLLECT, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> disableCertificate(String _id) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DISABLECERTIFICATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> enableCertificate(String _id) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ENABLECERTIFICATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> getBalance() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETBALANCE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<CertificateRecord> getCertificateDetail(String _id) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETCERTIFICATEDETAIL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<CertificateRecord>() {}));
        return executeRemoteCallSingleValueReturn(function, CertificateRecord.class);
    }

    public RemoteFunctionCall<List> getMyCertificatesAsIssuer() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETMYCERTIFICATESASISSUER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getMyCertificatesAsRecipient() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETMYCERTIFICATESASRECIPIENT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<Boolean> isCertificateValid(String _id) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISCERTIFICATEVALID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> issueCertificate(String _recipientAddress, String _certificateCourseId, BigInteger _qualification, String _cid, String _certificateHash) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ISSUECERTIFICATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _recipientAddress), 
                new org.web3j.abi.datatypes.Utf8String(_certificateCourseId), 
                new org.web3j.abi.datatypes.generated.Uint256(_qualification), 
                new org.web3j.abi.datatypes.Utf8String(_cid), 
                new org.web3j.abi.datatypes.Utf8String(_certificateHash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> owningAuthority() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_OWNINGAUTHORITY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> renewCertificate(String _id) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENEWCERTIFICATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setCertificationCourseAddr(String _certificationCourseAddr) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETCERTIFICATIONCOURSEADDR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _certificationCourseAddr)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setTokenManagementAddr(String _tokenManagementAddr) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETTOKENMANAGEMENTADDR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _tokenManagementAddr)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> transferOwnership(String newOwner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFEROWNERSHIP, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, newOwner)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> updateCertificateVisibility(String _id, Boolean _isVisible) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_UPDATECERTIFICATEVISIBILITY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id), 
                new org.web3j.abi.datatypes.Bool(_isVisible)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> validateCertificateIntegrity(String _certificateHash) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_VALIDATECERTIFICATEINTEGRITY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_certificateHash)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    @Deprecated
    public static TrustCertificationContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new TrustCertificationContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static TrustCertificationContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new TrustCertificationContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static TrustCertificationContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new TrustCertificationContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static TrustCertificationContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new TrustCertificationContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<TrustCertificationContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(TrustCertificationContract.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<TrustCertificationContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(TrustCertificationContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<TrustCertificationContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(TrustCertificationContract.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<TrustCertificationContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(TrustCertificationContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class CertificateRecord extends DynamicStruct {
        public String issuerAddress;

        public String recipientAddress;

        public String course;

        public BigInteger expirationDate;

        public BigInteger qualification;

        public BigInteger durationInHours;

        public String cid;

        public String certificateHash;

        public BigInteger expeditionDate;

        public Boolean isVisible;

        public Boolean isEnabled;

        public Boolean isExist;

        public CertificateRecord(String issuerAddress, String recipientAddress, String course, BigInteger expirationDate, BigInteger qualification, BigInteger durationInHours, String cid, String certificateHash, BigInteger expeditionDate, Boolean isVisible, Boolean isEnabled, Boolean isExist) {
            super(new org.web3j.abi.datatypes.Address(issuerAddress),new org.web3j.abi.datatypes.Address(recipientAddress),new org.web3j.abi.datatypes.Utf8String(course),new org.web3j.abi.datatypes.generated.Uint256(expirationDate),new org.web3j.abi.datatypes.generated.Uint256(qualification),new org.web3j.abi.datatypes.generated.Uint256(durationInHours),new org.web3j.abi.datatypes.Utf8String(cid),new org.web3j.abi.datatypes.Utf8String(certificateHash),new org.web3j.abi.datatypes.generated.Uint256(expeditionDate),new org.web3j.abi.datatypes.Bool(isVisible),new org.web3j.abi.datatypes.Bool(isEnabled),new org.web3j.abi.datatypes.Bool(isExist));
            this.issuerAddress = issuerAddress;
            this.recipientAddress = recipientAddress;
            this.course = course;
            this.expirationDate = expirationDate;
            this.qualification = qualification;
            this.durationInHours = durationInHours;
            this.cid = cid;
            this.certificateHash = certificateHash;
            this.expeditionDate = expeditionDate;
            this.isVisible = isVisible;
            this.isEnabled = isEnabled;
            this.isExist = isExist;
        }

        public CertificateRecord(Address issuerAddress, Address recipientAddress, Utf8String course, Uint256 expirationDate, Uint256 qualification, Uint256 durationInHours, Utf8String cid, Utf8String certificateHash, Uint256 expeditionDate, Bool isVisible, Bool isEnabled, Bool isExist) {
            super(issuerAddress,recipientAddress,course,expirationDate,qualification,durationInHours,cid,certificateHash,expeditionDate,isVisible,isEnabled,isExist);
            this.issuerAddress = issuerAddress.getValue();
            this.recipientAddress = recipientAddress.getValue();
            this.course = course.getValue();
            this.expirationDate = expirationDate.getValue();
            this.qualification = qualification.getValue();
            this.durationInHours = durationInHours.getValue();
            this.cid = cid.getValue();
            this.certificateHash = certificateHash.getValue();
            this.expeditionDate = expeditionDate.getValue();
            this.isVisible = isVisible.getValue();
            this.isEnabled = isEnabled.getValue();
            this.isExist = isExist.getValue();
        }
    }

    public static class OnCertificateDeletedEventResponse extends BaseEventResponse {
        public String _id;

        public Boolean _isVisible;
    }

    public static class OnCertificateDisabledEventResponse extends BaseEventResponse {
        public String _id;

        public Boolean _isVisible;
    }

    public static class OnCertificateEnabledEventResponse extends BaseEventResponse {
        public String _id;

        public Boolean _isVisible;
    }

    public static class OnCertificateRenewedEventResponse extends BaseEventResponse {
        public String _id;

        public Boolean _isVisible;
    }

    public static class OnCertificateVisibilityUpdatedEventResponse extends BaseEventResponse {
        public String _id;

        public Boolean _isVisible;
    }

    public static class OnNewCertificateGeneratedEventResponse extends BaseEventResponse {
        public String _id;

        public Boolean _isVisible;
    }

    public static class OnOwnershipTransferredEventResponse extends BaseEventResponse {
        public String previousOwner;

        public String newOwner;
    }
}
