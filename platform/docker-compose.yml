version: '3.6'

# Volumes
volumes:
  zookeeper-data:
    driver: local
  zookeeper-log:
    driver: local
  kafka-data:
    driver: local
  redis-data:
    driver: local
  redis-ui:
    driver: local
  openldap-data:
    driver: local

# Networks
networks:
  tcs_network:
    name: tcs_network

# Platform Services
services:

  # Apache ZooKeeper is an effort to develop and maintain an open-source server which enables highly reliable distributed coordination.
  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - tcs_network

  # Apache Kafka is an open-source distributed event streaming platform used 
  # by thousands of companies for high-performance data pipelines, 
  # streaming analytics, data integration, and mission-critical applications.
  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    volumes:
      - kafka-data:/var/lib/kafka
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_NUM_PARTITIONS: 12
      KAFKA_COMPRESSION_TYPE: gzip
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
      KAFKA_JMX_PORT: 9091
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    links:
      - zookeeper
    networks:
      - tcs_network

  # Manage & view data inside your Apache Kafka Â® cluster
  akhq:
    image: tchiotludo/akhq
    container_name: akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:9092"
    ports:
      - 8088:8080
    links:
      - kafka
    networks:
      - tcs_network

  # Manage Secrets & Protect Sensitive Data
  vault:
    image: vault:latest
    restart: on-failure
    container_name: vault
    volumes:
      - ./vault/config:/vault/config
      - ./vault/policies:/vault/policies
      - ./vault/data:/vault/data
    ports:
      - 8200:8200
    environment:
      - VAULT_ADDR=http://0.0.0.0:8200
      - VAULT_API_ADDR=http://0.0.0.0:8200
      - VAULT_ADDRESS=http://0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    command: vault server -config=/vault/config/vault.json
    networks:
      - tcs_network

  ## OpenLDAP is an open source implementation of the Lightweight Directory Access Protocol, 
  ## which makes it possible for organizations to use centralized authentication and directory access services over a network.

  openldap:
    image: osixia/openldap-backup:1.5.0
    container_name: openldap
    volumes:
      - openldap-data:/var/lib/ldap
      - openldap-data:/etc/ldap/slapd.d
      - ./openldap/backup:/data/backup
    environment:
      - LDAP_BASE_DN=dc=trustcertificationsystem,dc=org
      - LDAP_ORGANISATION=trustcertificationsystem
      - LDAP_DOMAIN=trustcertificationsystem.org
      - LDAP_ADMIN_PASSWORD=tried-58-Folder-broadly
      - LDAP_RFC2307BIS_SCHEMA=true
      - LDAP_REMOVE_CONFIG_AFTER_SETUP=true
      - LDAP_TLS_VERIFY_CLIENT=never
    ports:
      - 389:389
      - 636:636
    networks:
      - tcs_network

  # MongoDB is a free and open-source cross-platform document-oriented database program
  mongo:
    image: mongo
    container_name: mongo
    env_file:
      - .env
    restart: on-failure
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DB}
    networks:
      - tcs_network


  # Web-based MongoDB admin interface, written with Node.js and express
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: on-failure
    env_file:
      - .env
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGOEXPRESS_LOGIN}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGOEXPRESS_PASSWORD}
    depends_on:
      - mongo
    ports:
      - "8083:8081"
    networks:
      - tcs_network

  # Redis is an open-source in-memory datastore used as a database, cache, and even a message broker. 
  redis-server:
    image: redis:6.2-alpine
    container_name: redis-server
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - redis-data:/data
    networks:
      - tcs_network

  # P3X Redis UI is a very functional handy database GUI and works in your pocket on the responsive web or as a desktop app
  redis-ui:
    image: patrikx3/p3x-redis-ui
    container_name: redis-ui
    ports:
      - 7843:7843
    volumes: 
      - redis-ui:/settings
    links:
      - redis-server
    networks:
      - tcs_network

  # Trust Certification System Discovery Server
  tcs_discovery_server:
    image: ssanchez11/trust_certification_system_discovery_server:0.0.1-SNAPSHOT
    container_name: tcs-discovery-server
    env_file:
      - .env
    ports:
      - "8761:8761"
    networks:
      - tcs_network

  # Trust Certification System Monitor Server
  tcs_monitor_server:
    image: ssanchez11/trust_certification_system_monitor_server:0.0.1-SNAPSHOT
    container_name: tcs-monitor-server
    env_file:
      - .env
    ports:
      - "8060:8060"
    environment:
      - SERVICE_REGISTRY_HOST=tcs-discovery-server
    networks:
      - tcs_network

  # Trust Certification System Config Server
  tcs_config_server:
    image: ssanchez11/trust_certification_system_config_server:0.0.1-SNAPSHOT
    container_name: tcs-config-server
    env_file:
      - .env
    networks:
      - tcs_network
    ports:
      - "8081:8080"
    environment:
      - SERVICE_REGISTRY_HOST=tcs-discovery-server

  # Trust Certification System Gateway API
  tcs_gateway_api:
    image: ssanchez11/trust_certification_system_gateway_api:0.0.1-SNAPSHOT
    container_name: tcs-gateway-api
    env_file:
      - .env
    volumes:
      - ./wallets:/opt/wallets
    ports:
      - "8080:8080"
    networks:
      - tcs_network
    environment:
      - SERVICE_REGISTRY_HOST=tcs-discovery-server

  # Trust Certification System Certificate Events Processor
  tcs_certificate_events_processor:
    image: ssanchez11/trust_certification_system_certificate_events_processor:0.0.1-SNAPSHOT
    container_name: tcs-certificate-events-processor
    env_file:
      - .env
    volumes:
      - ./wallets:/opt/wallets
    networks:
      - tcs_network
    environment:
      - SERVICE_REGISTRY_HOST=tcs-discovery-server


  # Trust Certification System Notification Events Processor
  tcs_notification_events_processor:
    image: ssanchez11/trust_certification_system_notification_events_processor:0.0.1-SNAPSHOT
    container_name: tcs-notification-events-processor
    env_file:
      - .env
    volumes:
      - ./wallets:/opt/wallets
    networks:
      - tcs_network
    environment:
      - SERVICE_REGISTRY_HOST=tcs-discovery-server

  # Trust Certification System User Events Processor
  tcs_user_events_processor:
    image: ssanchez11/trust_certification_system_user_events_processor:0.0.1-SNAPSHOT
    container_name: tcs-user-events-processor
    env_file:
      - .env
    volumes:
      - ./wallets:/opt/wallets
    networks:
      - tcs_network
    environment:
      - SERVICE_REGISTRY_HOST=tcs-discovery-server

  # Trust Certification System Course Events Processor
  tcs_course_events_processor:
    image: ssanchez11/trust_certification_system_course_events_processor:0.0.1-SNAPSHOT
    container_name: tcs-course-events-processor
    env_file:
      - .env
    volumes:
      - ./wallets:/opt/wallets
    networks:
      - tcs_network
    environment:
      - SERVICE_REGISTRY_HOST=tcs-discovery-server